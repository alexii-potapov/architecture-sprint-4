Задание 2. Мониторинг

«Мотивация». Напишите здесь, почему в систему нужно добавить мониторинг и что это даст компании.
Оперативной получение данных о работе системы позволит восремя реагировать на перегрузки или внештатные ситуации.
Так же это повзолит выявить слабое место что бы потом его усилить, через наращивание мощностей или мену архитектурного решения.
 
Для контроля работы API сервисов мы будем использовать RED подход для отслеживания основных показателей работы сервиса.
 
 
RabbitMQ:
Number of dead-letter-exchange letters
Число отброшенных сообщение из очереди обработки
Number of message in flight
Число принятых в обработку сообщение но еще не удаленных из очереди
Обязателньо нужен мониторинг числа сообщений на шине и время нахождения самого старого необработанного сообщения в каждом топике.


Internet shop API, CRM API, MES API :
Number of requests (RPS)
Число запросов в секунду показывает нагрузку на сервис, на каждый endpoint
CPU %,
Нагруженность процессора для оценки ресурсов
Memory Utilisation 
Проверка утечек по памяти и её своевременое освобождение
Response time (latency) 
Время ответа как задержка
Number of HTTP 200 
Число корректных ответов так же покажет endpoints с наибольшей и наименьшей нагрузкой
Number of HTTP 500
Чило ошибок в обработке запроса для своевременного выявления сбоев в системе или некорректной обработке

Kb provided (sent) for shop API
Объем данных полученных сервисом. Значть если кто-то начнет перегружать хранилище данными

DB instances:
Size
Для мониторинга заполнения файлового хранилища 
Number of connections
Число подключений что бы отслеживать корректное испольщзование пула подключений
IO Read 
для просмотра чтения диска, должны исопльзоваться индексы или корректные запросы что бы этого избегать
  
Size of S3 storage
Уведомлять о ресзких  потеряз свободного пространтва и близости  к пороговым значениям

 
Поскольку система не слишком большая то хранилища встроеного в один сервер Prometheus достаточна  сбора для хранения данных за несколько дней.
Так же она позволить делать нотификацию при достижении пороговых значений метрик.
Graphana позволить наглядно просматривать метрики на dashboards по каждой системе отдельно или сгруппировано по типу метрик.
Задачу потребуется завести на DevOps для выделения ресурсов и разварачивания данных систем и  обеспечения доступа от всех сервисов для сбора данных.


Дополнительное задание.  

При заполнении файлового хранилища на 80% уведомить через sms, DevOps  и завести задачу на расширение дискового пространства.
Если скрость роста объема данных в БД или S3 хранилище превысила 3% за день , то уведомить группу разработки через письмо, для проведения расследования.
При появлени 500 ошибок в любом из сервисов написать письмо в саппорт. Если число таких ошибок достигло 10 за час , то послать смс.
Постоянная загрузка процессора выше 90% на протяжении часа  гворит или о зависании процесса или о нехватке ресурсов и требуется произвести анализ.
